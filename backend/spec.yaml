openapi: 3.0.3
info:
  title: culero API
  description: Culero is an open-source platform aimed at creating a more transparent and democratic workplace by allowing employees to confidentially review their managers.
  version: 1.0.0
servers:
  - url: 'http://localhost:4200/api'

security:
  - bearerAuth: [ ]
tags:
  - name: user
    description: User related endpoints
  - name: reviews
    description: API endpoints to interact with Reviews
paths:
  /reviews:
    post:
      tags:
        - reviews
      summary: Submit a review
      description: Allows a user to submit a review for a manager.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '201':
          description: Review successfully submitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid input.

  /reviews/all:
    get:
      tags:
        - reviews
      summary: Get all reviews for the current user
      description: Retrieves all reviews associated with the currently authenticated user.
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: A list of all reviews for the current user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewWithoutComment'
        '401':
          description: Unauthorized. User is not authenticated.
        '500':
          description: Internal Server Error.

  /reviews/{authourId}:
    get:
      tags:
        - reviews
      summary: Get reviews by user
      description: Retrieve all reviews submitted by a specific user.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: authourId
          required: true
          schema:
            type: string
            description: Unique identifier for the user whose reviews are being fetched.
      responses:
        '200':
          description: An array of reviews submitted by the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'

        '404':
          description: User not found.
  /reviews/me:
    get:
      tags:
        - reviews
      summary: Get review summary for the current user
      description: Retrieves a summary of the reviews submitted by the currently authenticated user, including average ratings.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A summary of the user's review ratings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewWithoutComment'
        '401':
          description: Unauthorized. User is not authenticated.
        '500':
          description: Internal Server Error.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Review:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the review.
        authorId:
          type: string
          description: The unique identifier of the author of the review.
        recipientId:
          type: string
          description: The unique identifier of the recipient of the review.
        professionalism:
          type: integer
          description: Rating for professionalism on a scale of 0 to 5.
          minimum: 0
          maximum: 5
        reliability:
          type: integer
          description: Rating for reliability on a scale of 0 to 5.
          minimum: 0
          maximum: 5
        communication:
          type: integer
          description: Rating for communication on a scale of 0 to 5.
          minimum: 0
          maximum: 5
        comment:
          type: string
          description: Additional comments about the recipient.
          nullable: true
        createdAt:
          type: string
          format: date-time
          description: The date and time when the review was created.
      required:
        - authorId
        - professionalism
        - reliability
        - communication
        - comment
    ReviewWithoutComment:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the review.
        authorId:
          type: string
          description: The unique identifier of the author of the review.
        recipientId:
          type: string
          description: The unique identifier of the recipient of the review.
        professionalism:
          type: integer
          description: Rating for professionalism on a scale of 0 to 5.
          minimum: 0
          maximum: 5
        reliability:
          type: integer
          description: Rating for reliability on a scale of 0 to 5.
          minimum: 0
          maximum: 5
        communication:
          type: integer
          description: Rating for communication on a scale of 0 to 5.
          minimum: 0
          maximum: 5
        createdAt:
          type: string
          format: date-time
          description: The date and time when the review was created.
      required:
        - id
        - authorId
        - professionalism
        - reliability
        - communication
    LinkedSocialAccount:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the linked social account record.
        userId:
          type: string
          description: Unique identifier of the user who owns the linked social account.
        platform:
          type: string
          description: Name of the social media platform (e.g., 'facebook', 'twitter').
        isConnected:
          type: boolean
          description: Flag indicating whether the social account is connected.
        profileUrl:
          type: string
          format: uri
          description: URL to the social media profile.
          nullable: true
        accessToken:
          type: string
          description: Access token for the social media platform's API.
          nullable: true
        refreshToken:
          type: string
          description: Refresh token for the social media platform's API.
          nullable: true
        accessTokenExpiry:
          type: string
          format: date-time
          description: Expiry date and time of the access token.
          nullable: true
        refreshTokenExpiry:
          type: string
          format: date-time
          description: Expiry date and time of the refresh token.
          nullable: true
      required:
        - id
        - userId
        - platform
        - isConnected
    Connection:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the connection record.
        followerId:
          type: string
          description: Unique identifier of the user who is following.
        followingId:
          type: string
          description: Unique identifier of the user being followed.
      required:
        - id
        - followerId
        - followingId
    AuthType:
      type: string
      enum:
        - GOOGLE
        - APPLE
        - FACEBOOK
        - LINKEDIN
      description: The type of authentication used by the user.
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user, typically a cuid.
        email:
          type: string
          format: email
          description: Unique email address of the user.
        name:
          type: string
          description: Name of the user.
          nullable: true
        profilePictureUrl:
          type: string
          format: uri
          description: URL to the user's profile picture.
          nullable: true
        authType:
          $ref: '#/components/schemas/AuthType'
        fullName:
          type: string
          description: Full name of the user.
        headline:
          type: string
          description: Professional headline of the user.
          nullable: true
        jobTitle:
          type: string
          description: Current job title of the user.
          nullable: true
        reviews:
          type: array
          description: Reviews authored by the user.
          items:
            $ref: '#/components/schemas/Review'
        receivedReviews:
          type: array
          description: Reviews received by the user.
          items:
            $ref: '#/components/schemas/Review'
        connections:
          type: array
          description: Connections where the user is the follower.
          items:
            $ref: '#/components/schemas/Connection'
        followedConnections:
          type: array
          description: Connections where the user is the following.
          items:
            $ref: '#/components/schemas/Connection'
        LinkedSocialAccounts:
          type: array
          description: Social accounts linked to the user's profile.
          items:
            $ref: '#/components/schemas/LinkedSocialAccount'
      required:
        - id
        - email
        - authType
        - fullName
