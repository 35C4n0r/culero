datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id                  Int                   @id @default(autoincrement())
    fullName            String
    headline            String?
    email               String                @unique
    profilePicture      String?
    jobTitle            String?
    reviews             Review[]              @relation("author")
    receivedReviews     Review[]              @relation("recipient")
    connections         Connection[]          @relation("follower")
    followedConnections Connection[]          @relation("following")
    LinkedSocialAccount LinkedSocialAccount[]
}

model Review {
    id              Int      @id @default(autoincrement())
    author          User     @relation("author", fields: [authorId], references: [id])
    authorId        Int
    recipient       User     @relation("recipient", fields: [recipientId], references: [id])
    recipientId     Int
    professionalism Int      @default(0)
    reliability     Int      @default(0)
    communication   Int      @default(0)
    comment         String?
    createdAt       DateTime @default(now())
}

model Connection {
    id          Int  @id @default(autoincrement())
    follower    User @relation("follower", fields: [followerId], references: [id])
    followerId  Int
    following   User @relation("following", fields: [followingId], references: [id])
    followingId Int

    @@unique([followerId, followingId])
}

model LinkedSocialAccount {
    id                 Int       @id @default(autoincrement())
    userId             Int
    user               User      @relation(fields: [userId], references: [id])
    platform           String
    isConnected        Boolean   @default(false)
    profileUrl         String?
    accessToken        String?   @db.Text
    refreshToken       String?   @db.Text
    accessTokenExpiry  DateTime?
    refreshTokenExpiry DateTime?

    @@unique([userId, platform])
}
